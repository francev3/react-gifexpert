{"version":3,"sources":["components/AddCategory.js","components/GifItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifItem","id","title","url","className","src","alt","getGifs","category","a","endpoint","fetch","resp","json","data","gifs","map","img","images","downsized","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,0BAAOC,SATU,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAO,GAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,SAMvC,2BACIC,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCIhBG,EAVC,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAE1B,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAKA,K,uBCPJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,iDAEwCF,EAFxC,6BACJ,oCADI,SAGAG,MAAMD,GAHN,cAGbE,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,UAAUhB,QAVhB,kBAcZY,GAdY,4CAAH,sDC+BLK,EA3BC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDL,SAAEA,GAAe,IAAD,EACbrB,mBAAS,CAC/B4B,KAAM,GACNM,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAW,WACPjB,EAAQC,GAAUiB,MAAM,SAACC,GAAD,OACpBH,EAAS,CACLR,KAAMW,EACNL,SAAS,SAGlB,CAACb,IAEGc,EDZmBK,CAAYnB,GAA9BO,EAFoB,EAEpBA,KAAOM,EAFa,EAEbA,QAGf,OACI,oCACI,wBAAIjB,UAAU,qCAAsCI,GAElDa,GAAW,uBAAGjB,UAAU,qCAAb,kBAEb,yBAAKA,UAAU,aAGPW,EAAKC,KAAK,SAAAC,GAAG,OACT,kBAAC,EAAD,eACIW,IAAKX,EAAIhB,IACLgB,UEYjBY,EA5BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,aAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,oCACI,4CACA,6BAIA,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,4BAEI4C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIoB,IAAMpB,EACNA,SAAUA,UClBlCuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.55003d43.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length>2 )\r\n            setCategories( cats => [inputValue, ...cats] );\r\n        \r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst GifItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifItem;\r\n","export const getGifs = async (category) => {\r\n    const apiKey = 'sSfGz5zNgVH4DNOM5uknx7JrwswNNGpV';\r\n    const endpoint = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=${apiKey}`;\r\n    const resp = await fetch(endpoint);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    // console.log(gifs);\r\n    \r\n}","import React from 'react'\r\nimport GifItem from './GifItem';\r\nimport { useFetchGif } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { gifs , loading} = useFetchGif(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__fadeIn\" >'Caragando...'</p> }\r\n\r\n            <div className=\"card-grid\">\r\n            \r\n                {\r\n                    gifs.map( img =>(\r\n                        <GifItem\r\n                            key={img.id}\r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = ( category ) => {\r\n    const [state, setState] = useState({\r\n        gifs: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs(category).then( (imgs) => (\r\n            setState({\r\n                gifs: imgs,\r\n                loading: false\r\n            }\r\n        ))) ;\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One puch'])\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <hr/>\r\n\r\n            {/* <button onClick={handleAddCategory} >Agregar</button> */}\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <ol>\r\n            { \r\n                categories.map( category => \r\n                    <GifGrid \r\n                        key ={category}   \r\n                        category={category} \r\n                    />\r\n                )\r\n            }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}